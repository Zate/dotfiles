#!/usr/bin/env bash

unset_d () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    D_BASHINC=false
    D_CHROMEOS=false
    D_GO=false
    D_LXD=false
    D_ZSH=false
    PKGS=""
    DEBIAN_FRONTEND=""
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

check_env () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    [[ -f "/.dockerenv" ]] && export D_DOCKER=true || true
    [[ -d "/mnt/chromeos" ]] && export D_CHROMEOS=true || true
    [[ -d "/dev/lxd" ]] && export D_LXD=true || true
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

check_bash_inc () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    [[ -f "/.local/.bash_inc" ]] && export D_BASHINC=true || true
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

#check_zsh () {
#    echo " start check_zsh"
#    D_ZSH=$(which zsh) || true
#    [[ $D_ZSH == "" ]] && echo "No zsh installed, installing now."; install_zsh || true
#    [[ $D_ZSH != "" ]] && chsh -s ${D_ZSH} || true
#    install_omz || true
#    echo "end check_zsh"
#}

skel_function () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    [[ "true" == "true" ]] && true || false
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

check_prereqs () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    check_env
    check_bash_inc
    [[ ! -d "~/bin" ]] && mkdir -p ~/bin || true
    export DEBIAN_FRONTEND=noninteractive
    PKGS="-y apt-utils software-properties-common git curl"
    [[ ! -f `which unzip` ]] && PKGS="${PKGS} unzip" || true
    [[ ! -f `which python3` ]] && PKGS="${PKGS} python3" || true
    [[ ! -f `which pip` ]] && PKGS="${PKGS} python3-pip" || true
    export PKGS
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -qq ${PKGS} < /dev/null > /dev/null
    [[ ! `which pip` == "${HOME}/bin/pip" ]] && sudo ln `which pip3` ~/bin/pip || true
    
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

