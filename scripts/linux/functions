#!/usr/bin/env bash

installLinux () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    checkVersions || true
    [[ $D_GO == true ]] && installGo || true
    installShellInc || true
    proj || true
    installPosh || true
    upPath || true
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

installGo () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    echo "Installing go"
    [[ ! -d "/usr/local/go" ]] && sudo mkdir -p /usr/local/go || true
    [[ ! $DL_URL == "" ]] && curl -fsSL $DL_URL | sudo tar zxf - -C /usr/local || return 1
    [[ ! -f "/usr/local/go/bin/go" ]] && IGO=true || IGO=false
    [[ $IGO == true ]] && upGo || true
    echo "`go version` installed at `which go`"
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

installShellInc () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    [[ ! -d "$HOME/.local" ]] && mkdir -p $HOME/.local || true
    cp -rp scripts/linux/shell_inc $HOME/.local/.shell_inc
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

installPosh () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    # Check if ~/bin exists
    [[ ! -d "$HOME/bin" ]] && mkdir -p $HOME/bin || true
    # Install posh
    [[ ! -f "$HOME/bin/oh-my-posh" ]] && { echo "Installing oh-my-posh"; } || { echo "oh-my-posh already installed"; return 0; }
    curl -s https://ohmyposh.dev/install.sh | bash -s -- -d ~/bin
    chmod +x $HOME/bin/oh-my-posh
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

cleanLinux () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    [[ -d "/usr/local/go" ]] && { echo "Removing /usr/local/go"; sudo rm -rf /usr/local/go; } || true
    [[ -f $HOME/.local/.shell_inc ]] && { echo "Removing $HOME/.local/.shell_inc"; rm -f $HOME/.local/.shell_inc; } || true
    [[ -f $HOME/.local/.bash_inc ]] && { echo "Removing $HOME/.local/.bash_inc"; rm -f $HOME/.local/.bash_inc; } || true
    [[ -f $HOME/.local/.zsh_inc ]] && { echo "Removing $HOME/.local/.zsh_inc"; rm -f $HOME/.local/.zsh_inc; } || true
    # Remove 'source ~/.local/.bash_inc' from ~/.bashrc
    [[ $(grep -Fx "[[ -f \$HOME/.local/.bash_inc ]] && . \$HOME/.local/.bash_inc" ~/.bashrc) != "" ]] && { echo "Removing ~/.bashrc entries"; sed -i '/\[\[ -f \$HOME\/\.local\/\.bash_inc \]\] && \. \$HOME\/\.local\/\.bash_inc/d' ~/.bashrc; } || true
    # remove '. $HOME/.local/.shell_inc' from $HOME/.bashrc
    [[ $(grep -Fx "[[ -f \$HOME/.local/.shell_inc ]] && . \$HOME/.local/.shell_inc" ~/.bashrc) != "" ]] && { echo "Removing ~/.bashrc entries"; sed -i '/\[\[ -f \$HOME\/\.local\/\.shell_inc \]\] && \. \$HOME\/\.local\/\.shell_inc/d' ~/.bashrc; } || true
    # TODO: Remove '. $HOME/.local/.zsh_inc' from $HOME/.zshrc
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

proj () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    # Check if ~/projects exists
    [[ ! -d "$HOME/projects" ]] && mkdir -p $HOME/projects || true
    mkdir -p $GOPATH/src/github.com
    mkdir -p ~/projects/github
    [[ ! -L "$GOPATH/src/github.com/Zate" ]] && { ln -s $HOME/projects/github $GOPATH/src/github.com/Zate; } || true
    [[ ! -L "$GOPATH/src/github.com/zate" ]] && { ln -s $HOME/projects/github $GOPATH/src/github.com/zate;  } || true
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}

git_config () {
    [[ $D_DEBUG == true ]] && echo "start $FUNCNAME"
    git config --global user.name "Zate"
    git config --global user.email "zate75@gmail.com"
    [[ $D_DEBUG == true ]] && echo "end $FUNCNAME"
    return 0
}



